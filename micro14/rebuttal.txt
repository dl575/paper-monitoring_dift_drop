General

-How does this work compared to previous work (FlexiTaint, FlexCore, Heapmon,
etc.)?
Run-time monitoring is a well studied problem. However, our work is the first
that proposes a general hardware platform that allows for an adjustable
overhead target by trading off coverage for overhead.

Review-A

-How is metadata dependence graph encoded and processed?
Sources are marked statically in the program by the compiler or programmer
annotation. The dataflow engine stores 2 bits per metadata indicating whether
it is null or invalid. It dynamically propagates this information as
instructions execute.

Review-B

-How does this compare to FlexCore's dropping of events?
We ensure that false positives do not occur when events are dropped. FlexCore
does not prevent these false positives.

-Baseline overheads are high.
Our overheads are comparable to previous work such as [Newsome NDSS'05]
(24-37x) and [Chen ASID'06] (4-10x). More recent works have aggressively
optimized these monitors to reduce overheads, though these overheads could
still be considered too high to enable monitoring in certain contexts. These
optimizations could be applied to our system as well, resulting in higher
coverage at the same target overhead or comparable coverage at even lower
overheads.

-Information flow tracking can have false positives and negatives (e.g.,
implicit flows). Is the effect of these examined?
The information flow tracking scheme that we examined only tracked explicit
flows. Monitoring schemes which track implicit flows may require additional
support to ensure no false positives on our hardware platform.

-Why use extra HW + extra core as opposed to a programmable HW unit?
We evaluated our idea on a core-based monitor as this has greater flexibility
and requires less hardware changes to implement. However, our techniques could
also be applied to hardware monitors, such as FlexiTaint and FlexCore, to enable
adjustable overheads.

Review-C

-Why choose security monitoring instead of applications like profiling which
 can tolerate partial coverage?
We focused on security monitoring due to the challenges that arise with false
positives for these monitoring techniques. Our platform could also be used with
profiling applications in order to enable reduced and adjustable overheads.

Review-D

-Claiming false negatives can be ignored.
Although full monitoring is always desired, if the performance overheads
of full monitoring cannot be tolerated, then false negatives are a
necessary trade off. The alternative would be to completely disable
monitoring (i.e., 100% false negatives).

-How can your scheme emulate other monitoring techniques?
As the monitor is implemented in software on a core, it can support a wide
range of monitoring operations. Specifically, any instruction-grained
monitoring technique should be implementable.

Review-E

-How much additional benefit does data-flow filtering provide over
 instruction-type filtering (FlexCore)?
Like FlexCore, our system also filters out monitoring for instruction
types which are not relevant to a monitoring technique. The results we
show are the additional benefit of our technique on top of
instruction-type filtering.

-Baseline selected based on what runs on simulator instead of
 state-of-the-art (dynamic allocation of memory).
Dynamic allocation of metadata memory is required for the large metadata used
by the monitors we evaluated (up to 4 GB total memory required). Static
allocation may be possible for systems with large memory space, but was not
reasonable for our target system.

-Processor with hardware support for information flow tracking can provide the
same functionality.
The main focus of our platform is to enable reduced and adjustable overheads
which has not been studied by previous works on hardware support for
information flow tracking. The monitoring techniques we evaluated could be
implemented with a sufficiently configurable information flow tracking
mechanism. However, there are other monitors (e.g., control flow integrity
checking, hardware error detection, etc.) which our technique could also be
applied to.

